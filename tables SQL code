DROP TABLE IF EXISTS bids_for cascade;
DROP TABLE IF EXISTS c_pricelist cascade;
DROP TABLE IF EXISTS caretakers cascade;
DROP TABLE IF EXISTS determines_mpl cascade;
DROP TABLE IF EXISTS has_availability cascade;
DROP TABLE IF EXISTS nonadmin cascade;
DROP TABLE IF EXISTS owns cascade;
DROP TABLE IF EXISTS pays cascade; 	
DROP TABLE IF EXISTS pcsadmin cascade;
DROP TABLE IF EXISTS petowner cascade;
DROP TABLE IF EXISTS salary cascade;
DROP TABLE IF EXISTS users cascade;
DROP TABLE IF EXISTS leave_applied cascade;


--CREATE TYPE transfer AS ENUM('0','1','2');	-- 0 for pet owner deliver, 1 for caretaker pick up, 2 for physical transfer
--CREATE TYPE employed_as AS ENUM ('0', '1');	-- 0 for pt and 1 for ft
--CREATE TYPE status as ENUM('0', '1', '2'); 	-- 0 (pending) , 2 (in prog) , 3(completed)

CREATE TABLE users(
	name 		VARCHAR (100) NOT NULL,
	phone 		INTEGER NOT NULL,
	PRIMARY KEY(name, phone)
);

CREATE TABLE pcsadmin (
	name 		VARCHAR(100) NOT NULL,
	phone 		INTEGER NOT NULL,
	FOREIGN KEY(name, phone) REFERENCES users(name, phone) ON DELETE cascade ON UPDATE cascade,
	PRIMARY KEY(name, phone)
);


CREATE TABLE nonadmin(					-- ISA table for this has to be overlap so this is one
	name 		VARCHAR (100) NOT NULL,		-- constrain that is not shown in the ERD. 
	phone 		INTEGER NOT NULL,
	address 	VARCHAR (100),
	transfer 	transfer,
	FOREIGN KEY(name, phone) REFERENCES users(name, phone) ON DELETE cascade ON UPDATE cascade,
	PRIMARY KEY(name, phone)
);

CREATE TABLE petowner (
	name 			VARCHAR (100) NOT NULL,
	phone 			INTEGER NOT NULL,
	address 		VARCHAR (100),
	transfer 		transfer,
	c_card_info 		VARCHAR(30) NOT NULL,
	require_date 		DATE NOT NULL,
	FOREIGN KEY(name, phone) REFERENCES nonadmin(name, phone) ON DELETE cascade ON UPDATE cascade,
	PRIMARY KEY(name, phone)
);

CREATE TABLE caretakers (
	name 		VARCHAR (100) NOT NULL,
	phone 		INTEGER NOT NULL,
	address 	VARCHAR (100),
	transfer 	transfer,
	employed	employed_as, 
	max 		INTEGER CHECK ((max <= 5 AND employed='1') OR (max<=2 AND employed='0') OR (max<=5 AND employed='0' AND rating>=4)),
	rating 		NUMERIC(2, 1) CHECK (rating <= 5),
	FOREIGN KEY(name, phone) REFERENCES nonadmin(name, phone),
	PRIMARY KEY(name, phone)
);

CREATE TABLE has_availability (
	caretaker 	VARCHAR(100) NOT NULL,
	phone 		INTEGER, 
	date 		DATE NOT NULL,
	cur_load 	INTEGER,
	FOREIGN KEY (caretaker, phone) REFERENCES caretakers(name, phone) ON DELETE cascade ON UPDATE cascade,
	PRIMARY KEY (caretaker, phone, date)
);

CREATE TABLE c_pricelist (			-- price of each caretaker might change due to rating.
	cname 		VARCHAR, 
	cphone 		INTEGER, 
	pet_type 	VARCHAR,
	price 		INTEGER, 
	FOREIGN KEY (cname, cphone) REFERENCES caretakers(name, phone) ON DELETE cascade ON UPDATE cascade,
	PRIMARY KEY (pet_type, price, cname, cphone)
);

CREATE TABLE determines_mpl (
	pcsadmin 	VARCHAR, 
	phone 		INTEGER,
	pet_type	VARCHAR, 
	price		INTEGER,
	FOREIGN KEY (pcsadmin, phone) REFERENCES pcsadmin(name, phone) ON DELETE cascade ON UPDATE cascade, 
	PRIMARY KEY (pcsadmin, phone, pet_type)
);

CREATE TABLE owns (
	owner 			VARCHAR(100) NOT NULL,
	phone 			INTEGER NOT NULL, 
	pet_name 		VARCHAR(100),
	pet_type 		VARCHAR(100),
	special_reqs 		VARCHAR(500),
	FOREIGN KEY (owner, phone)  REFERENCES petowner(name, phone) ON DELETE CASCADE ON UPDATE cascade,
	PRIMARY KEY (owner, pet_name, pet_type)
);

CREATE TABLE bids_for (
	bids_no 	INTEGER, 
	caretaker 	VARCHAR(100) NOT NULL,
	cphone 		INTEGER NOT NULL,
	petowner 	VARCHAR(100) NOT NULL, 
	date 		DATE NOT NULL,
	pet_name 	VARCHAR(100) NOT NULL,
	pet_type 	VARCHAR(100) NOT NULL,
	special_reqs 	VARCHAR(100), 
	status 		status, 
	trans_mtd 	VARCHAR, 
	pay_mtd 	VARCHAR, 
	rating 		INTEGER, 
	FOREIGN KEY (petowner, pet_name, pet_type) REFERENCES owns(owner, pet_name, pet_type) ON DELETE CASCADE ON UPDATE cascade,
	FOREIGN KEY (caretaker, cphone, date) REFERENCES has_availability(caretaker, phone, date) ON DELETE CASCADE ON UPDATE cascade,
	PRIMARY KEY (caretaker, petowner, date, pet_name)
);

CREATE TABLE pays (
	petname 	VARCHAR, 
	pet_type 	VARCHAR,
	price 		INTEGER NOT NULL,
	caretaker 	VARCHAR NOT NULL,
	cphone 		INTEGER NOT NULL,
	petowner 	VARCHAR NOT NULL, 
	pphone 		INTEGER NOT NULL, 
	pet_days 	INTEGER,
	date 		DATE, 		
	FOREIGN KEY (petowner, petname, pet_type) REFERENCES owns (owner, pet_name, pet_type) ON DELETE cascade ON UPDATE cascade, 
	FOREIGN KEY (pet_type, price, caretaker, cphone) REFERENCES c_pricelist (pet_type, price, cname, cphone) ON DELETE cascade ON UPDATE cascade,  
	FOREIGN KEY (caretaker, petowner, date, petname) REFERENCES bids_for (caretaker, petowner, date, pet_name), 
	PRIMARY KEY (pet_type, caretaker)
);


CREATE TABLE leave_applied (			-- should be empty until the caretaker wants to apply for leave
	caretaker 	VARCHAR,
	phone 		INTEGER, 
	leave_applied 	DATE, 
	FOREIGN KEY (caretaker, phone) REFERENCES caretakers(name, phone) ON DELETE cascade ON UPDATE cascade, 
	PRIMARY KEY (caretaker, phone, leave_applied)
);


